import { AfterViewInit, ElementRef, EventEmitter, OnInit } from "@angular/core";
import * as ɵngcc0 from '@angular/core';
export declare class SignaturePadComponent implements OnInit, AfterViewInit {
    private signaturePad;
    canvasRef: ElementRef;
    points: any[];
    pointsChange: EventEmitter<any>;
    editable: boolean;
    emitOnDragEnd: boolean;
    penColor: string;
    backgroundColor: string;
    showDoneButton: boolean;
    doneButtonText: string;
    doneButtonClass: string;
    showClearButton: boolean;
    clearButtonText: string;
    clearButtonClass: string;
    format: 'blob' | 'base64' | 'json';
    height: number;
    width: number;
    done: EventEmitter<{}>;
    cleared: EventEmitter<{}>;
    responsive: boolean;
    constructor();
    ngOnInit(): void;
    ngAfterViewInit(): void;
    initPad(): void;
    clearPad(): void;
    applyPoints(): void;
    emitPoints(): void;
    emitPointsAndBlob(): void;
    emitBlob(): void;
    resizeCanvas(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SignaturePadComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SignaturePadComponent, "ng-signature-pad", never, { "points": "points"; "editable": "editable"; "emitOnDragEnd": "emitOnDragEnd"; "penColor": "penColor"; "backgroundColor": "backgroundColor"; "showDoneButton": "showDoneButton"; "doneButtonText": "doneButtonText"; "doneButtonClass": "doneButtonClass"; "showClearButton": "showClearButton"; "clearButtonText": "clearButtonText"; "clearButtonClass": "clearButtonClass"; "format": "format"; "height": "height"; "width": "width"; "responsive": "responsive"; }, { "pointsChange": "pointsChange"; "done": "done"; "cleared": "cleared"; }, never, never>;
}

//# sourceMappingURL=signature-pad.component.d.ts.map